//Note: this script is not ideal at the moment, especially for pressed state for strum notes


var gfStrumArrows:FlxSpriteGroup;

function onCreate()
{
    gfStrumArrows = new FlxSpriteGroup(); //Setting up new group of new strum notes behind notes, that gf should press
    gfStrumArrows.cameras = [PlayState.instance.camHUD];
    PlayState.instance.add(gfStrumArrows);
}

function onCreatePost()
{
    setupThirdCharacter(); //Just doing all fun after PlayState was created
}

function opponentNoteHit(id, direction, noteType, isSustainNote)
{
    if (noteType == 'GF Sing') //Just an example how you can make strum notes play pressed anim 
    {
        gfStrumArrows.forEach(function(spr:StaticArrow){
            if(spr.ID == direction)
                spr.playAnim('pressed', false);
                spr.resetAnim += 0.15;
        });
    }
}

function setupThirdCharacter()
{
    playerStrumLine.forEach(function(babyArrow:FlxSprite) //Moving all player strum notes to right
	{
        babyArrow.setGraphicSize(Std.int(babyArrow.width * 0.9), Std.int(babyArrow.height * 0.9));
        babyArrow.updateHitbox();
		babyArrow.x += 120;
	});

    enemyStrumLine.forEach(function(babyArrow:FlxSprite) //Moving all opponent strum notes to left
	{
        babyArrow.setGraphicSize(Std.int(babyArrow.width * 0.9), Std.int(babyArrow.height * 0.9));
        babyArrow.updateHitbox();
		babyArrow.x -= 120;
	});

    for (i in 0...4) //Generation gf strum notes
    {
        var babyArrow = new StaticArrow(FlxG.width / 2 - 200, 50);
        babyArrow.noteData = i;
        babyArrow.texture = PlayState.noteskinTexture;

        babyArrow.scrollFactor.set();

        babyArrow.ID = i;

        babyArrow.playAnim('static');

        gfStrumArrows.add(babyArrow);

        babyArrow.setGraphicSize(Std.int(babyArrow.width * 0.9), Std.int(babyArrow.height * 0.9));  
        babyArrow.updateHitbox();

        for (note in PlayState.instance.unspawnNotes)
        {
            if ((note.gfNote) && note.noteData == i) //There we are setting up which notes should track this strum note
            {
                note.sprTracker = babyArrow;
            }
        }
    }
}